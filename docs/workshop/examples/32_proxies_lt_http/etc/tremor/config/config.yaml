onramp:
  - id: http
    type: rest
    linked: true
    codec: string
    config:
      host: 0.0.0.0
      port: 9139

offramp:
  - id: upstream
    type: rest
    linked: true
    codec: string
    config:
      endpoint: "http://tremor-server:8139"

binding:
  - id: main
    links:
      # send incoming requests for processing
      "/onramp/http/{instance}/out":
        ["/pipeline/request_processing/{instance}/in"]

      # process incoming requests and relay it to upstream
      "/pipeline/request_processing/{instance}/out":
        ["/offramp/upstream/{instance}/in"]

      # send the response from upstream for processing
      "/offramp/upstream/{instance}/out":
        ["/pipeline/response_processing/{instance}/in"]

      # process upstream response and send it back as a response to incoming
      "/pipeline/response_processing/{instance}/out":
        ["/onramp/http/{instance}/in"]

  - id: error
    links:
      "/onramp/http/{instance}/err":
        ["/pipeline/internal_error_processing/{instance}/in"]

      "/pipeline/request_processing/{instance}/err":
        ["/pipeline/internal_error_processing/{instance}/in"]

      "/offramp/upstream/{instance}/err":
        ["/pipeline/internal_error_processing/{instance}/in"]

      "/pipeline/response_processing/{instance}/err":
        ["/pipeline/internal_error_processing/{instance}/in"]

      # send back errors as response as well
      "/pipeline/internal_error_processing/{instance}/out":
        ["/onramp/http/{instance}/in"]
        #"/offramp/system::stderr/system/in"

      # respond on errors during error processing too
      "/pipeline/internal_error_processing/{instance}/err":
        ["/onramp/http/{instance}/in"]
        #"/offramp/system::stderr/system/in"

mapping:
  /binding/main/01:
    instance: "01"
  /binding/error/01:
    instance: "01"
