onramp:
  - id: http
    type: rest
    linked: true
    codec: string
    config:
      host: 0.0.0.0
      port: 9139

offramp:
  - id: ws
    type: ws
    linked: true
    codec: string
    postprocessors:
      - lines
    config:
      url: "ws://tremor-server:8139"

# TODO fix this error we sometimes get on startup:
#   error: URL does not contain a pipeline servant id
binding:
  - id: main
    links:
      # send incoming requests for processing
      "/onramp/http/{instance}/out":
        ["/pipeline/request_processing/{instance}/in"]

      # process incoming requests and relay it to ws offramp
      "/pipeline/request_processing/{instance}/out":
        ["/offramp/ws/{instance}/in"]

      # send the response from ws offramp to the passthrough pipeline
      # this works well as long as the passthrough pipeline is not used
      # by anything else (which is the case for this example)
      "/offramp/ws/{instance}/response":
        ["/pipeline/system::passthrough/{instance}/in"]

      # send the ws repsonse back as a response to incoming
      "/pipeline/system::passthrough/{instance}/out":
        ["/onramp/http/{instance}/response"]
        #"/offramp/system::stdout/system/in"

  - id: error
    links:
      "/onramp/http/{instance}/error":
        ["/pipeline/internal_error_processing/{instance}/in"]

      # TODO naming here should be standardized to one thing (either err or error)
      "/pipeline/request_processing/{instance}/err":
        ["/pipeline/internal_error_processing/{instance}/in"]

      "/offramp/ws/{instance}/error":
        ["/pipeline/internal_error_processing/{instance}/in"]

      # send back errors as response as well
      "/pipeline/internal_error_processing/{instance}/out":
        ["/onramp/http/{instance}/response"]
        #"/offramp/system::stderr/system/in"

      # respond on errors during error processing too
      # TODO naming here should be standardized to one thing (either err or error)
      "/pipeline/internal_error_processing/{instance}/err":
        ["/onramp/http/{instance}/response"]
        #"/offramp/system::stderr/system/in"

mapping:
  /binding/main/01:
    instance: "01"
  /binding/error/01:
    instance: "01"
