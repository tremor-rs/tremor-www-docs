onramp:
  - id: http
    type: rest
    linked: true
    codec: string
    config:
      host: 0.0.0.0
      port: 9139

offramp:
  - id: quota_service_1
    type: rest
    linked: true
    codec: json
    config:
      endpoint:
        host: quota_service_1
        port: 8139
        path: /quotas
  - id: quota_service_2
    type: rest
    linked: true
    codec: json
    config:
      endpoint:
        host: quota_service_2
        port: 8139
        path: /quotas

binding:
  - id: main
    links:
      "/onramp/http/{instance}/out":
        - "/pipeline/main/{instance}/in"

      # process incoming requests and send back the response
      "/pipeline/main/{instance}/out":
        - "/onramp/http/{instance}/in"
        # for debugging
        #- "/offramp/system::stdout/system/in"

      # distribute quota service config submissions to all its members
      # TODO aggregate responses from all members and store in the state for
      # status updates
      "/pipeline/main/{instance}/quota_service":
        - "/offramp/quota_service_1/{instance}/in"
        - "/offramp/quota_service_2/{instance}/in"
        # for debugging
        #- "/offramp/system::stdout/system/in"

      # response handling
      "/offramp/quota_service_1/{instance}/out":
        - "/pipeline/upstream_response/{instance}/in"
      "/offramp/quota_service_2/{instance}/out":
        - "/pipeline/upstream_response/{instance}/in"
      # send responses back to the onramp
      "/pipeline/upstream_response/{instance}/out":
        - "/onramp/http/{instance}/in"

  - id: error
    links:
      "/onramp/http/{instance}/err":
        - "/pipeline/internal_error_processing/{instance}/in"

      "/pipeline/main/{instance}/err":
        - "/pipeline/internal_error_processing/{instance}/in"

      "/pipeline/upstream_response/{instance}/err":
        - "/pipeline/internal_error_processing/{instance}/in"

      "/offramp/quota_service_1/{instance}/err":
        - "/pipeline/internal_error_processing/{instance}/in"
      "/offramp/quota_service_2/{instance}/err":
        - "/pipeline/internal_error_processing/{instance}/in"

      # send back errors as response as well
      "/pipeline/internal_error_processing/{instance}/out":
        - "/onramp/http/{instance}/in"
        # - "/offramp/system::stderr/system/in"

      # respond on errors during error processing too
      "/pipeline/internal_error_processing/{instance}/err":
        - "/onramp/http/{instance}/in"
        # - "/offramp/system::stderr/system/in"

mapping:
  /binding/main/01:
    instance: "01"
  /binding/error/01:
    instance: "01"
